//Day-15(Module-15 Divide and Conquer)-10/07/2024

/* public class Divide_Conquer {

    public static void mergeSort(int arr[],int si,int ei){
        //base class
        if(si>=ei){
            return;
        }
        int mid=si+(ei-si)/2; //calculating mid;
        mergeSort(arr, si, mid); //left part
        mergeSort(arr, mid+1, ei);//right part
        merge(arr,si,mid,ei); //merge both part
    }

    public static void merge(int arr[],int si,int mid,int ei){
        int temp[]=new int[ei-si+1]; //making temp arry 
        int i=si; //iterator for left part
        int j=mid+1; //iterator for right part
        int k=0; //iterator for temp array

        while(i<=mid && j<=ei){
            if(arr[i]<arr[j]){
                temp[k]=arr[i];
               i++; k++;
            }else{
                temp[k]=arr[j];
                j++;k++;
            }
    
        }

        //left part Remaining

        while(i<=mid){
            temp[k++]=arr[i++];
        }


        //right part Remainig
        while(j<=ei){
            temp[k++]=arr[j++];
        }

        //copy to orignal array
        for(k=0,i=si;k<temp.length;k++,i++){
            arr[i]=temp[k];
        }
    }

    public static void main(String [] args){
        int arr[]={6,3,9,5,2,8};
        mergeSort(arr, 0, arr.length-1);
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]+" ");
        }
        System.out.println();
    }
    
}
 */
